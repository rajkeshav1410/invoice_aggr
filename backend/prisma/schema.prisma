// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Enterprise {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  address   String
  gstin     String
  legend    Legend[]
  work      Work[]
  createdBy User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Legend {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
  enterpriseId String     @db.ObjectId
  invoice      String
  invoiceDate  DateTime
  purchase     Purchase
  Work         Work       @relation(fields: [workId], references: [id])
  workId       String     @db.ObjectId
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Work {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String     @unique
  description String?
  party       Enterprise @relation(fields: [partyId], references: [id])
  partyId     String     @db.ObjectId
  period      DateTime
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String     @db.ObjectId
  legends     Legend[]
  workItem    WorkItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model WorkItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  work      Work     @relation(fields: [workId], references: [id])
  workId    String   @db.ObjectId
  access    Access   @default(OWNER)
  User      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  email      String       @unique
  password   String
  role       Role         @default(USER)
  workItems  WorkItem[]
  work       Work[]
  Enterprise Enterprise[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

type Purchase {
  p18 Float
  p12 Float
  p5  Float
  p0  Float
}

enum Role {
  ADMIN
  USER
}

enum Access {
  OWNER
  COLLABORATOR
  VIEWER
}
